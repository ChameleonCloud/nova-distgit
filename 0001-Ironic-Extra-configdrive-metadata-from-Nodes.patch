From 5e3766a0bd2deabe210c6f0a7b83b14b0d99e692 Mon Sep 17 00:00:00 2001
From: Lucas Alvares Gomes <lucasagomes@gmail.com>
Date: Tue, 3 Feb 2015 16:16:39 +0000
Subject: [PATCH] Ironic: Extra configdrive metadata from Nodes

Make the Nova Ironic driver inject metadata from the Ironic node to the
configdrive, it's important to note that these metadata are added by the
deployer to do some extra configuration in the baremetal node if needed.

Change-Id: I3b00914a939d92f81787ac13f5bbb0c33bb6c50c
---
 nova/tests/unit/virt/ironic/test_driver.py | 17 ++++++++++-------
 nova/virt/ironic/driver.py                 |  4 ++++
 2 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/nova/tests/unit/virt/ironic/test_driver.py b/nova/tests/unit/virt/ironic/test_driver.py
index 7e297dd..a840969 100644
--- a/nova/tests/unit/virt/ironic/test_driver.py
+++ b/nova/tests/unit/virt/ironic/test_driver.py
@@ -808,15 +808,14 @@ class IronicDriverTestCase(test.NoDBTestCase):
     @mock.patch.object(ironic_driver.IronicDriver, '_start_firewall')
     def _test_spawn(self, mock_sf, mock_pvifs, mock_adf, mock_wait_active,
                     mock_node, mock_looping, mock_save):
-        node_uuid = 'aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee'
-        node = ironic_utils.get_test_node(driver='fake', uuid=node_uuid)
-        instance = fake_instance.fake_instance_obj(self.ctx, node=node_uuid)
+        instance = fake_instance.fake_instance_obj(self.ctx,
+                                                   node=self.node.uuid)
         fake_flavor = objects.Flavor(ephemeral_gb=0)
         instance.flavor = fake_flavor
 
-        mock_node.get.return_value = node
+        mock_node.get.return_value = self.node
         mock_node.validate.return_value = ironic_utils.get_test_validation()
-        mock_node.get_by_instance_uuid.return_value = node
+        mock_node.get_by_instance_uuid.return_value = self.node
         mock_node.set_provision_state.return_value = mock.MagicMock()
 
         fake_looping_call = FakeLoopingCall()
@@ -850,6 +849,8 @@ class IronicDriverTestCase(test.NoDBTestCase):
     @mock.patch.object(configdrive, 'required_by')
     def test_spawn(self, mock_required_by, mock_configdrive):
         mock_required_by.return_value = False
+        self.node = ironic_utils.get_test_node(driver='fake',
+                                               uuid=uuidutils.generate_uuid())
         self._test_spawn()
         # assert configdrive was not generated
         self.assertFalse(mock_configdrive.called)
@@ -1614,10 +1615,12 @@ class IronicDriverGenerateConfigDriveTestCase(test.NoDBTestCase):
         mock_make_drive = mock.MagicMock(make_drive=lambda *_: None)
         mock_cd_builder.return_value.__enter__.return_value = mock_make_drive
         self.driver._generate_configdrive(self.instance, self.node,
-                                          self.network_info)
+                                          self.network_info,
+                                          extra_md={'cat': 'meow'})
         mock_cd_builder.assert_called_once_with(instance_md='fake-instance')
         mock_instance_meta.assert_called_once_with(self.instance,
-            network_info=self.network_info, extra_md={}, content=None)
+            network_info=self.network_info, extra_md={'cat': 'meow'},
+            content=None)
 
     def test_generate_configdrive_fail(self, mock_cd_builder,
                                        mock_instance_meta):
diff --git a/nova/virt/ironic/driver.py b/nova/virt/ironic/driver.py
index 0ab992e..42b027d 100644
--- a/nova/virt/ironic/driver.py
+++ b/nova/virt/ironic/driver.py
@@ -797,6 +797,10 @@ class IronicDriver(virt_driver.ComputeDriver):
             if admin_password:
                 extra_md['admin_pass'] = admin_password
 
+            node_extra_md = node.extra.get('configdrive_metadata')
+            if node_extra_md:
+                extra_md.update(node_extra_md)
+
             configdrive_value = self._generate_configdrive(
                 instance, node, network_info, extra_md=extra_md,
                 files=injected_files)
